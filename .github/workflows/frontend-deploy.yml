name: Frontend Deploy

on:
  push:
    branches: [develop, feature/#382]
    # paths: frontend/**

jobs:
  build-dockerfile:
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: yarn

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.FRONTEND_IMAGE_NAME }}:$GITHUB_RUN_NUMBER .
          docker tag ${{ secrets.FRONTEND_IMAGE_NAME }}:$GITHUB_RUN_NUMBER ${{ secrets.FRONTEND_IMAGE_NAME }}:latest
        env:
          DOCKER_CLI_AGGREGATE: 1
          DOCKER_BUILDKIT: 1

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.FRONTEND_IMAGE_NAME }}:latest
        env:
          DOCKER_CLI_AGGREGATE: 1

  deploy-to-develop-EC2:
    needs: build-dockerfile
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Develop EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: 192.168.1.230
          username: ubuntu
          key: ${{ secrets.secrets.DEVELOP_SSH_PRIVATE_KEY }}
          port: 22
          script: docker stop ${{ secrets.FRONTEND_CONTAINER_NAME }} || true
            docker rm ${{ secrets.FRONTEND_CONTAINER_NAME }} || true
            docker pull ${{ secrets.FRONTEND_IMAGE_NAME }}:latest
            docker run -d -p 3000:3000 --name ${{ secrets.FRONTEND_CONTAINER_NAME }} ${{ secrets.FRONTEND_IMAGE_NAME }}:latest

      # - name: Setup SSH key
      #   uses: webfactory/ssh-agent@v0.4.1
      #   with:
      #     ssh-private-key: ${{ secrets.DEVELOP_SSH_PRIVATE_KEY }}

      # - name: Deploy to EC2 - develop branch
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ubuntu@192.168.1.230 "
      #       docker stop ${{ secrets.FRONTEND_CONTAINER_NAME }} || true
      #       docker rm ${{ secrets.FRONTEND_CONTAINER_NAME }} || true
      #       docker pull ${{ secrets.FRONTEND_IMAGE_NAME }}:latest
      #       docker run -d -p 3000:3000 --name ${{ secrets.FRONTEND_CONTAINER_NAME }} ${{ secrets.FRONTEND_IMAGE_NAME }}:latest
      #     "

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: 프론트엔드 배포 알림
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
